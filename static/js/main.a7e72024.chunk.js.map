{"version":3,"sources":["SnakeBoard.js","utils.js","Points.js","LeaderBoard.js","App.js","index.js"],"names":["SnakeBoard","points","setPoints","initialRows","i","j","randomPosition","x","Math","floor","random","y","useState","rows","setRows","snake","setSnake","direction","setDirection","food","setFood","intervalId","setIntervalId","isGameOver","setIsGameOver","document","addEventListener","e","keyCode","displayRows","map","row","className","tile","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newSnake","push","head","slice","find","b","checkGameOver","pointsList","JSON","parse","localStorage","getItem","setItem","stringify","window","dispatchEvent","Event","forEach","pop","newRows","displaySnake","Points","getSnakePoints","LeaderBoard","setPointsList","sortedPointsList","sort","a","App","onClick","location","reload","ReactDOM","render","StrictMode","getElementById"],"mappings":"uQA6JeA,G,YAzJI,SAAC,GAYlB,IAZ2C,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAWvBC,EAAc,GACTC,EAAI,EAAGA,EAHD,GAGaA,IAAK,CAC/BD,EAAYC,GAAK,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAJJ,GAIeA,IACzBF,EAAYC,GAAGC,GAAK,QAKxB,IAAMC,EAAiB,WAKrB,MAJiB,CACfC,EAAGC,KAAKC,MAZE,GAYID,KAAKE,UACnBC,EAAGH,KAAKC,MAdG,GAcGD,KAAKE,YAvBmB,EAiClBE,mBAAST,GAjCS,mBAiCnCU,EAjCmC,KAiC7BC,EAjC6B,OAoChBF,mBAAS,CAAC,CAACL,EAAE,EAAGI,EAAE,KApCF,mBAoCnCI,EApCmC,KAoC5BC,EApC4B,OAsCRJ,mBAAS,SAtCD,mBAsCnCK,EAtCmC,KAsCxBC,EAtCwB,OAwClBN,mBAASN,GAxCS,mBAwCnCa,EAxCmC,KAwC7BC,EAxC6B,OA0CNR,qBA1CM,mBA0CnCS,EA1CmC,KA0CvBC,EA1CuB,OA2CNV,oBAAS,GA3CH,mBA2CnCW,EA3CmC,KA2CvBC,EA3CuB,KA+D1CC,SAASC,iBAAiB,WAlBM,SAACC,GAE/B,OADkBA,EAAZC,SAEJ,KAAK,GACHV,EAAa,QACb,MACF,KAAK,GACHA,EAAa,OACb,MACF,KAAK,GACHA,EAAa,SACb,MACF,KAAK,GACHA,EAAa,cAK2C,GAG9D,IAAMW,EAAchB,EAAKiB,KAAI,SAACC,EAAK3B,GAAN,OAC3B,qBAAK4B,UAAU,YAAf,SAAoCD,EAAID,KAAI,SAACG,EAAM5B,GAAP,OAAa,qBAAK2B,UAAS,eAAUC,IAAa5B,OAA9DD,MA8ElC,OC3IyB,SAAC8B,EAAUC,EAAOb,GAC3C,IAAMc,EAAgBC,mBAEtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAEJI,qBAAU,WAIR,GAAc,OAAVH,EAAgB,CAClB,IAAIK,EAAKC,aAJX,WACEL,EAAcG,YAGaJ,GAE3B,OADAb,EAAckB,GACP,kBAAME,cAAcF,OAE5B,CAACL,EAAOb,IDyHXqB,EAxDkB,WAChB,IAAMC,EAAW,GACjB,OAAO3B,GAIL,IAAK,QAEH2B,EAASC,KAAK,CAACtC,EAAGQ,EAAM,GAAGR,EAAGI,GAAII,EAAM,GAAGJ,EAAI,GArFvC,KAsFR,MACF,IAAK,OAEHiC,EAASC,KAAK,CAACtC,EAAGQ,EAAM,GAAGR,EAAGI,GAAII,EAAM,GAAGJ,EAAI,EAzFvC,SA0FR,MACF,IAAK,MAEHiC,EAASC,KAAK,CAACtC,GAAIQ,EAAM,GAAGR,EAAI,EA9FvB,OA8F6CI,EAAGI,EAAM,GAAGJ,IAClE,MACF,IAAK,SAEHiC,EAASC,KAAK,CAACtC,GAAIQ,EAAM,GAAGR,EAAI,GAlGvB,GAkGoCI,EAAGI,EAAM,GAAGJ,IAM7D,GAjCoB,WACpB,IAAMmC,EAAO/B,EAAM,GAEnB,OADaA,EAAMgC,MAAM,GAAI,GACjBC,MAAK,SAAAC,GAAC,OAAIA,EAAE1C,IAAMuC,EAAKvC,GAAK0C,EAAEtC,IAAMmC,EAAKnC,KA8BjDuC,GAAiB,CACnB1B,GAAc,GAEdkB,cAAcrB,GAGd,IAAM8B,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,GACvEJ,EAAWN,KAAK5C,GAChBqD,aAAaE,QAAQ,eAAgBJ,KAAKK,UAAUN,IACpDO,OAAOC,cAAe,IAAIC,MAAM,YAIlC7C,EAAM8C,SAAQ,SAAA5B,GAAUW,EAASC,KAAKZ,MAGnClB,EAAM,GAAGR,IAAMY,EAAKZ,GAAKQ,EAAM,GAAGJ,IAAMQ,EAAKR,GAC9CS,EAAQd,GACRJ,EAAUD,EAAO,IAIjB2C,EAASkB,MAGX9C,EAAS4B,GAlEU,WACjB,IAAMmB,EAAU5D,EAChBY,EAAM8C,SAAQ,SAAA5B,GAAS8B,EAAQ9B,EAAK1B,GAAG0B,EAAKtB,GAAK,WACjDoD,EAAQ5C,EAAKZ,GAAGY,EAAKR,GAAK,OAC1BG,EAAQiD,GA+DVC,KAIqB,IAAK1C,GAG1B,sBAAKU,UAAU,cAAf,UACGH,EACAN,GAAc,qBAAKS,UAAU,YAAf,6BE/INiC,G,MANA,SAAC,GAAc,IAAbhE,EAAY,EAAZA,OACf,OACE,sBAAK+B,UAAU,SAAf,UAAyB/B,EAAzB,oBCFEiE,G,MAAiB,kBAAMd,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,KAmBlEY,EAjBK,WAAO,IAAD,EACYvD,mBAASsD,KADrB,mBACjBf,EADiB,KACLiB,EADK,KAGxBV,OAAOhC,iBAAiB,WAAU,WAChC0C,EAAcF,QAGhB,IAAMG,EAAmBlB,EAAWmB,MAAK,SAACC,EAAGtB,GAAJ,OAAUA,EAAIsB,KAEvD,OACE,sBAAKvC,UAAU,cAAf,UACE,qBAAKA,UAAU,qBAAf,mBACA,qBAAKA,UAAU,qBAAf,SAAqCqC,EAAiBtB,MAAM,EAAE,GAAGjB,KAAI,SAAC7B,EAAQG,GAAT,OAAe,gCAA6BH,EAA7B,2BAAaA,EAAb,YAAuBG,aCOlGoE,MAlBf,WAAgB,IAAD,EACe5D,mBAAS,GADxB,mBACNX,EADM,KACEC,EADF,KAGb,OACE,sBAAK8B,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,sBAGA,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CAAQ/B,OAAQA,IAChB,cAAC,EAAD,CAAYA,OAAQA,EAAQC,UAAWA,OAEzC,wBAAQuE,QAAS,kBAAMf,OAAOgB,SAASC,QAAO,IAA9C,uBACA,cAAC,EAAD,QCdNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrD,SAASsD,eAAe,W","file":"static/js/main.a7e72024.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport {useInterval} from './utils'\nimport './SnakeBoard.css'\n\nconst SnakeBoard = ({points, setPoints}) => {\n  /*\n  initialRows on kaksiulotteinen array eli taulukko\n  alustettuna pelkillä tyhjillä arvoilla 'blank'\n  0 : (10) ['blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank']\n  1 : (10) ['blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank']\n  2 : (10) ['blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank']\n  ...\n  */\n  const height = 10\n  const width = 10\n  var initialRows = []\n  for (var i = 0; i < height; i++) {\n    initialRows[i] = []\n    for (var j = 0; j < width; j++) {\n      initialRows[i][j] = 'blank'\n    }\n  }\n\n  // Satunnainen sijainti x ja y -koordinaatistossa\n  const randomPosition = () => {\n    const position = {\n      x: Math.floor(Math.random() * width),\n      y: Math.floor(Math.random() * height)\n    }\n    return position\n  }\n\n  /*\n  Reactin statea voi käyttää Hookien avulla myös tällaisissa luokattomissa\n  komponenteissa. https://joinex.fi/react-pahkinankuoressa/\n  */\n  // Rows eli rivit merkitsee tässä pelilaudan rivejä\n  const [rows, setRows] = useState(initialRows)\n  // Lisätään mato. Mato on lista objekteja, joihin tallennetaan madon osien x ja y -sijainnit.\n  // Alustetaan madon pään sijainniksi {x:0, y:0}\n  const [snake, setSnake] = useState([{x:0, y:0}])\n  // Alustetaan madon suunnaksi oikealle\n  const [direction, setDirection] = useState('right')\n  // Käytetään randomPosition funktiota alustamaan ruuan sijainti kun mato syö ruuan\n  const [food, setFood] = useState(randomPosition)\n  // Tallennetaan interval id stateen, jotta sen voi pelin loppuessa pysäyttää\n  const [intervalId, setIntervalId] = useState()\n  const [isGameOver, setIsGameOver] = useState(false)\n\n  const changeDirectionWithKeys = (e) => {\n    var { keyCode } = e;\n    switch(keyCode) {\n      case 37:\n        setDirection('left')\n        break\n      case 38:\n        setDirection('top')\n        break\n      case 39:\n        setDirection('right')\n        break\n      case 40:\n        setDirection('bottom')\n        break\n      default: break\n    }\n  }\n  document.addEventListener(\"keydown\", changeDirectionWithKeys, false)\n\n  // Tässä kohdassa tehdään kaksiulotteisesta taulukosta näkyvä versio pelikentästä\n  const displayRows = rows.map((row, i) =>\n    <div className='Snake-row' key={i}>{row.map((tile, j) => <div className={`tile ${tile}`} key={j} /> )}</div>\n  )\n\n  // Asetetaan mato pelilaudalle madon x ja y -sijaintien mukaisesti\n  // Asetetaan samalla myös ruoka pelilaudalle (x,y)\n  const displaySnake = () => {\n      const newRows = initialRows\n      snake.forEach(tile => {newRows[tile.x][tile.y] = 'snake'})\n      newRows[food.x][food.y] = 'food'\n      setRows(newRows)\n  }\n\n  // Tarkistetaan onko mato osunut itseensä\n  const checkGameOver = () => {\n    const head = snake[0]\n    const body = snake.slice(1, -1)\n    return body.find(b => b.x === head.x && b.y === head.y)\n  }\n\n  // Liikutetaan matoa haluttuun suuntaan\n  const moveSnake = () => {\n    const newSnake = []\n    switch(direction) {\n      // Jakojäännös (%) tarkoittaa jakolaskussa yli jäävää kokonaislukua.\n      // Esimerkiksi jos luku 17 jaetaan luvulla 5, jakojäännös on 2, koska 3 · 5 = 15, mutta 2 jää yli.\n      // snake[0] on madon ensimmäinen osa eli pää\n      case 'right':\n        // x pysyy samana, y menee yhden askeleen oikealle eli plus yksi\n        newSnake.push({x: snake[0].x, y: (snake[0].y + 1) % width})\n        break\n      case 'left':\n        // x pysyy samana, y menee yhden askeleen vasemmalle eli miinus yksi\n        newSnake.push({x: snake[0].x, y: (snake[0].y - 1 + width) % width})\n        break\n      case 'top':\n        // x menee yhden askeleen ylöspäin eli miinus yksi, y pysyy samana\n        newSnake.push({x: (snake[0].x - 1 + height) % height, y: snake[0].y})\n        break\n      case 'bottom':\n        // x menee yhden askeleen alaspäin eli plus yksi, y pysyy samana\n        newSnake.push({x: (snake[0].x + 1) % height, y: snake[0].y})\n        break\n      default:\n        break\n    }\n\n    if (checkGameOver()) {\n      setIsGameOver(true)\n      // Pysäytä madon liikkumisen intervalli\n      clearInterval(intervalId)\n      // Lisää pisteet local storageen tulostaulukkoa varten\n      // HUOM! Local storage hyväksyy vain JSON:ia\n      const pointsList = JSON.parse(localStorage.getItem('snake-points')) || []\n      pointsList.push(points)\n      localStorage.setItem('snake-points', JSON.stringify(pointsList))\n      window.dispatchEvent( new Event('storage') )\n    }\n\n    // Lisätään madolle joka intervallilla / \"askeleella\" uusi pala\n    snake.forEach(tile => { newSnake.push(tile) })\n\n    // Vaihdetaan ruuan sijaintia jos mato syö ruuan.\n    if(snake[0].x === food.x && snake[0].y === food.y) {\n      setFood(randomPosition)\n      setPoints(points+1)\n    } else {\n      // Jos mato ei syö ruokaa, poistetaan viimeinen hännän pala,\n      // jottei mato kasva joka askeleella, vaan vain silloin kun se saa ruuan kiinni!\n      newSnake.pop()\n    }\n\n    setSnake(newSnake)\n    displaySnake()\n  }\n\n  // Käytetään kustomoitua intervalli-funktiota madon liikuttamiseen\n  useInterval(moveSnake, 250, setIntervalId)\n\n  return (\n    <div className='Snake-board'>\n      {displayRows}\n      {isGameOver && <div className='Game-over'>Game over!</div>}\n    </div>\n  )\n}\n\nexport default SnakeBoard\n","import {useEffect, useRef} from 'react'\n/*\nJaetaan tämä pätkä oppilaille pastebiniin https://pastebin.com/\n\nThanks Dan Abramov for useInterval hook\nhttps://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nThis useInterval Hook sets up an interval and clears it after unmounting.\nIt’s a combo of setInterval and clearInterval tied to the component lifecycle.\n*/\nexport const useInterval = (callback, delay, setIntervalId) => {\n  const savedCallback = useRef()\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay)\n      setIntervalId(id)\n      return () => clearInterval(id)\n    }\n  }, [delay, setIntervalId])\n}\n","import React from 'react'\nimport './Points.css'\n\nconst Points = ({points}) => {\n  return (\n    <div className='Points'>{points} pistettä</div>\n  )\n}\n\nexport default Points\n","import React, {useState} from 'react'\nimport './LeaderBoard.css'\n\nconst getSnakePoints = () => JSON.parse(localStorage.getItem('snake-points')) || []\n\nconst LeaderBoard = () => {\n  const [pointsList, setPointsList] = useState(getSnakePoints())\n\n  window.addEventListener('storage',() => {\n    setPointsList(getSnakePoints())\n  })\n\n  const sortedPointsList = pointsList.sort((a, b) => b - a)\n\n  return (\n    <div className='LeaderBoard'>\n      <div className='LeaderBoard-header'>Top 5</div>\n      <div className='LeaderBoard-points'>{sortedPointsList.slice(0,5).map((points, i) => <div key={`${points}-${i}`}>{points} pistettä</div>)}</div>\n    </div>\n  )\n}\n\nexport default LeaderBoard\n","import React, {useState} from 'react'\nimport './App.css'\nimport SnakeBoard from './SnakeBoard'\nimport Points from './Points'\nimport LeaderBoard from './LeaderBoard'\n\nfunction App() {\n  const [points, setPoints] = useState(0)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Matopeli\n      </header>\n      <div className='Game'>\n        <Points points={points} />\n        <SnakeBoard points={points} setPoints={setPoints} />\n      </div>\n      <button onClick={() => window.location.reload(false)}>Uusi peli</button>\n      <LeaderBoard />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}